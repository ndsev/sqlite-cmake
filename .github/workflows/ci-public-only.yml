name: CI (Public SQLite Only)

# This workflow only tests the public SQLite backend
# Use this if you don't have access to NDS repositories

on:
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.github/workflows/ci.yml'  # Don't run if full CI is also running
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Debug, Release]
        sqlite_version: ["3.50.2", "3.47.0"]  # Test multiple SQLite versions
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DSQLITE_BACKEND=PUBLIC \
          -DSQLITE_VERSION=${{ matrix.sqlite_version }} \
          -DSQLITE_RELEASE_YEAR=2025 \
          -DSQLITE_ENABLE_FTS5=ON \
          -DSQLITE_ENABLE_RTREE=ON \
          -DSQLITE_ENABLE_JSON1=ON \
          -DSQLITE_ENABLE_MATH=ON \
          -DSQLITE_ENABLE_COLUMN_METADATA=ON \
          examples/basic
      shell: bash
    
    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}
    
    - name: Test
      working-directory: build
      run: ctest -C ${{ matrix.build_type }} --output-on-failure
      shell: bash
    
    - name: Run Example
      working-directory: build
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          ./${{ matrix.build_type }}/basic_example.exe || true
        else
          ./basic_example || true
        fi
      shell: bash

  minimal-config:
    name: Test Minimal Configuration
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure CMake (Minimal)
      run: |
        cmake -B build \
          -DSQLITE_BACKEND=PUBLIC \
          -DSQLITE_ENABLE_FTS5=OFF \
          -DSQLITE_ENABLE_RTREE=OFF \
          -DSQLITE_ENABLE_JSON1=OFF \
          -DSQLITE_ENABLE_MATH=OFF \
          -DSQLITE_ENABLE_COLUMN_METADATA=OFF \
          examples/basic
    
    - name: Build
      run: cmake --build build
    
    - name: Run Example
      working-directory: build
      run: ./basic_example || true

  shared-library:
    name: Test Shared Library Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure CMake (Shared)
      run: |
        cmake -B build \
          -DBUILD_SHARED_LIBS=ON \
          -DSQLITE_BACKEND=PUBLIC \
          -DSQLITE_SHARED=ON \
          examples/basic
      shell: bash
    
    - name: Build
      run: cmake --build build --config Release
    
    - name: Run Example
      working-directory: build
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          ./Release/basic_example.exe || true
        else
          ./basic_example || true
        fi
      shell: bash
